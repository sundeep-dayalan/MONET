name: Release MONET Platform

on:
  push:
    tags: ['v*']

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Frontend Build Step ---
      - name: Setup Node.js and pnpm for Frontend
        uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
      - name: Install Frontend Dependencies
        run: pnpm install
      - name: Build Frontend
        run: pnpm --filter monet-client build

      # --- Create Frontend Deployment Package ---
      - name: Create Client Deployment Package
        run: |
          echo "Creating client deployment package..."
          cd packages/client/dist
          zip -r ../../../monet-client.zip .
          cd ../../../
          echo "Client deployment package created."

      # --- Python Backend Packaging Step ---
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Create API Deployment Package
        run: |
          # 1. Create a clean staging directory
          mkdir -p staging
          
          # 2. Copy the function app code (the entire app directory becomes the function)
          echo "Copying Python application..."
          cp -r packages/core/app staging/
          
          # 3. Copy configuration files to root
          echo "Copying configuration files..."
          cp packages/core/host.json staging/
          cp packages/core/requirements.txt staging/
          
          # 4. Install Python dependencies into the staging directory
          echo "Installing Python dependencies..."
          pip install --target staging -r packages/core/requirements.txt
          
          # 5. Verify the final structure
          echo "Final structure in staging directory:"
          ls -lR staging
          
          # 6. Create the deployment package
          echo "Creating deployment package..."
          cd staging
          zip -r ../monet-api.zip .
          cd ..
          
          # 7. Verify the zip contents
          echo "Zip file contents:"
          unzip -l monet-api.zip | head -20
          
      - name: Create GitHub Release and Upload Asset
        uses: softprops/action-gh-release@v2
        with:
          files: |
            monet-api.zip
            monet-client.zip
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}