name: Release MONET Platform

on:
  push:
    tags: ['v*']

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: pnpm/action-setup@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build all packages (client and core)
        run: pnpm build

      - name: Create combined deployment package
        run: |
          # 1. Create a clean staging directory
          mkdir -p staging

          # 2. Copy compiled backend JS files into a 'dist' subfolder
          echo "Copying compiled backend files..."
          mkdir -p staging/dist
          cp packages/core/dist/function-wrapper.js staging/dist/
          
          # 3. Copy config files to the staging root
          cp packages/core/package.json staging/
          cp packages/core/host.json staging/
          mkdir -p staging/app
          cp packages/core/app/function.json staging/app/
          
          # 4. Copy the built frontend into a 'frontend' subfolder
          echo "Copying built frontend files..."
          cp -r packages/client/dist staging/frontend

          # 5. Move into the staging directory and install production dependencies
          cd staging
          echo "Installing production dependencies..."
          npm install --production
          
          # 6. Verify the final structure
          echo "Final structure in staging directory:"
          ls -lR

          # 7. Go back to the root and zip the contents
          cd ..
          echo "Zipping deployment package..."
          (cd staging && zip -r ../monet-api.zip ./* .??*)
          
      - name: Create GitHub Release and Upload Asset
        uses: softprops/action-gh-release@v2
        with:
          files: monet-api.zip
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}