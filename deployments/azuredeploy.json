{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "description": "MONET Financial Management App - Complete Azure Infrastructure Deployment with CI/CD",
    "author": "MONET Development Team"
  },
  "parameters": {
    "projectName": {
      "type": "string",
      "defaultValue": "monet",
      "minLength": 3,
      "maxLength": 10,
      "metadata": {
        "description": "Name of the project (used as prefix for all resources)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region for all resources except the Static Web App"
      }
    },
    "staticWebAppLocation": {
      "type": "string",
      "defaultValue": "Central US",
      "allowedValues": [
        "Central US",
        "East US 2",
        "East Asia",
        "West Europe",
        "West US 2"
      ],
      "metadata": {
        "description": "Location for the Static Web App Global Network"
      }
    },
    "tryFreeTier": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Use Cosmos DB free tier (only one per Azure account)"
      }
    }
  },
  "variables": {
    "uniqueSuffix": "[substring(uniqueString(resourceGroup().id), 0, 8)]",
    "storageAccountName": "[concat(parameters('projectName'), variables('uniqueSuffix'), 'storage')]",
    "cosmosAccountName": "[concat(parameters('projectName'), '-', variables('uniqueSuffix'), '-cosmos')]",
    "appInsightsName": "[concat(parameters('projectName'), '-', variables('uniqueSuffix'), '-insights')]",
    "keyVaultName": "[concat(parameters('projectName'), '-', variables('uniqueSuffix'), '-kv')]",
    "functionAppName": "[concat(parameters('projectName'), '-', variables('uniqueSuffix'), '-api')]",
    "staticWebAppName": "[concat(parameters('projectName'), '-', variables('uniqueSuffix'), '-web')]",
    "repositoryUrl": "https://github.com/sundeep-dayalan/MONET",
    "repositoryBranch": "azure"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": { "name": "Standard_LRS" },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2023-04-15",
      "name": "[variables('cosmosAccountName')]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": { "defaultConsistencyLevel": "Session" },
        "locations": [ { "locationName": "[parameters('location')]", "failoverPriority": 0 } ],
        "capabilities": [ { "name": "EnableServerless" } ],
        "enableFreeTier": "[parameters('tryFreeTier')]"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": { "Application_Type": "web" }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-02-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": { "family": "A", "name": "standard" },
        "enableRbacAuthorization": true
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-09-01",
      "name": "[concat(variables('functionAppName'), '-plan')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp,linux",
      "identity": { "type": "SystemAssigned" },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', concat(variables('functionAppName'), '-plan'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', concat(variables('functionAppName'), '-plan'))]",
        "httpsOnly": true,
        "siteConfig": {
          "linuxFxVersion": "NODE|~20",
          "appSettings": [
            { "name": "AzureWebJobsStorage", "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountName'), '2023-01-01').keys[0].value)]" },
            { "name": "FUNCTIONS_EXTENSION_VERSION", "value": "~4" },
            { "name": "FUNCTIONS_WORKER_RUNTIME", "value": "node" },
            { "name": "WEBSITE_NODE_DEFAULT_VERSION", "value": "~20" },
            { "name": "SCM_DO_BUILD_DURING_DEPLOYMENT", "value": "true" },
            { "name": "PROJECT", "value": "packages/core" }
          ]
        }
      }
    },
    {
        "type": "Microsoft.Web/sites/sourcecontrols",
        "apiVersion": "2021-02-01",
        "name": "[concat(variables('functionAppName'), '/web')]",
        "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
        ],
        "properties": {
            "repoUrl": "[variables('repositoryUrl')]",
            "branch": "[variables('repositoryBranch')]",
            "isManualIntegration": true
        }
    },
    {
      "type": "Microsoft.Web/staticSites",
      "apiVersion": "2023-01-01",
      "name": "[variables('staticWebAppName')]",
      "location": "[parameters('staticWebAppLocation')]",
      "sku": { "name": "Free", "tier": "Free" },
      "properties": {
        "repositoryUrl": "[variables('repositoryUrl')]",
        "branch": "[variables('repositoryBranch')]",
        "buildProperties": {
          "appLocation": "/packages/client",
          "apiLocation": "",
          "outputLocation": "dist",
          "appArtifactLocation": "dist"
        }
      }
    }
  ],
  "outputs": {
    "staticWebAppUrl": {
      "type": "string",
      "value": "[concat('https://', reference(variables('staticWebAppName')).defaultHostname)]"
    },
    "functionAppUrl": {
      "type": "string",
      "value": "[concat('https://', variables('functionAppName'), '.azurewebsites.net')]"
    }
  }
}