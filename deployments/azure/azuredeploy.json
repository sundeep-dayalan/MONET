{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "defaultValue": "monet",
      "metadata": {
        "description": "Base name for the application"
      }
    },
    "releaseVersion": {
      "type": "string",
      "defaultValue": "latest"
    }
  },
  "variables": {
    "uniqueSuffix": "[uniqueString(resourceGroup().id)]",
    "functionAppName": "[concat(parameters('appName'), '-app-', variables('uniqueSuffix'))]",
    "storageAccountName": "[concat('storage', uniqueString(resourceGroup().id))]",
    "clientStorageAccountName": "[concat('stclient', variables('uniqueSuffix'))]",
    "hostingPlanName": "[concat(parameters('appName'), '-plan-', variables('uniqueSuffix'))]",
    "cdnProfileName": "[concat(parameters('appName'), '-cdn-', variables('uniqueSuffix'))]",
    "cdnEndpointName": "[concat(parameters('appName'), '-endpoint-', variables('uniqueSuffix'))]",
    "managedIdentityName": "[concat(parameters('appName'), '-deploy-id-', variables('uniqueSuffix'))]",
    "storageBlobDataContributorRoleId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
    "cdnProfileContributorRoleId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '426e0c7b-319b-42b2-a5b3-214b15e1bd16')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[variables('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "sku": { "name": "Standard_LRS" },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-09-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[resourceGroup().location]",
      "kind": "linux",
      "properties": { "reserved": true },
      "sku": { "name": "Y1", "tier": "Dynamic" }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[variables('functionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp,linux",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "reserved": true,
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": false,
          "use32BitWorkerProcess": false,
          "ftpsState": "Disabled",
          "linuxFxVersion": "Python|3.11",
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountName'),'2022-09-01').keys[0].value)]"
            },
            { "name": "FUNCTIONS_EXTENSION_VERSION", "value": "~4" },
            { "name": "FUNCTIONS_WORKER_RUNTIME", "value": "python" },
            { "name": "FUNCTIONS_WORKER_RUNTIME_VERSION", "value": "3.11" },
            { "name": "WEBSITE_RUN_FROM_PACKAGE", "value": "1" },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountName'),'2022-09-01').keys[0].value)]"
            },
            { "name": "WEBSITE_CONTENTSHARE", "value": "[variables('functionAppName')]" },
            { "name": "WEBSITE_ENABLE_SYNC_UPDATE_SITE", "value": "true" },
            { "name": "SCM_DO_BUILD_DURING_DEPLOYMENT", "value": "false" }
          ],
          "cors": { "allowedOrigins": ["*"], "supportCredentials": false }
        }
      }
    },
    {
      "type": "Microsoft.Web/sites/extensions",
      "apiVersion": "2022-09-01",
      "name": "[concat(variables('functionAppName'), '/ZipDeploy')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
      ],
      "properties": {
        "packageUri": "[if(equals(parameters('releaseVersion'), 'latest'), 'https://github.com/sundeep-dayalan/MONET/releases/latest/download/monet-api.zip', concat('https://github.com/sundeep-dayalan/MONET/releases/download/', parameters('releaseVersion'), '/monet-api.zip'))]",
        "isAsync": true
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[variables('clientStorageAccountName')]",
      "location": "[resourceGroup().location]",
      "sku": { "name": "Standard_LRS" },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "staticWebsite": {
          "enabled": true,
          "indexDocument": "index.html",
          "errorDocument404Path": "index.html"
        }
      }
    },
    {
      "type": "Microsoft.Cdn/profiles",
      "apiVersion": "2023-05-01",
      "name": "[variables('cdnProfileName')]",
      "location": "Global",
      "sku": { "name": "Standard_AzureFrontDoor" }
    },
    {
      "type": "Microsoft.Cdn/profiles/afdEndpoints",
      "apiVersion": "2023-05-01",
      "name": "[concat(variables('cdnProfileName'), '/', variables('cdnEndpointName'))]",
      "location": "Global",
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles', variables('cdnProfileName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('clientStorageAccountName'))]"
      ],
      "properties": { "enabledState": "Enabled" }
    },
    {
      "type": "Microsoft.Cdn/profiles/originGroups",
      "apiVersion": "2023-05-01",
      "name": "[concat(variables('cdnProfileName'), '/default-origin-group')]",
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles', variables('cdnProfileName'))]"
      ],
      "properties": {
        "loadBalancingSettings": {
          "sampleSize": 4,
          "successfulSamplesRequired": 3,
          "additionalLatencyInMilliseconds": 50
        }
      }
    },
    {
      "type": "Microsoft.Cdn/profiles/originGroups/origins",
      "apiVersion": "2023-05-01",
      "name": "[concat(variables('cdnProfileName'), '/default-origin-group/', variables('clientStorageAccountName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles/originGroups', variables('cdnProfileName'), 'default-origin-group')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('clientStorageAccountName'))]"
      ],
      "properties": {
        "hostName": "[replace(replace(reference(resourceId('Microsoft.Storage/storageAccounts', variables('clientStorageAccountName')), '2022-09-01').primaryEndpoints.web, 'https://', ''), '/', '')]",
        "httpPort": 80,
        "httpsPort": 443,
        "originHostHeader": "[replace(replace(reference(resourceId('Microsoft.Storage/storageAccounts', variables('clientStorageAccountName')), '2022-09-01').primaryEndpoints.web, 'https://', ''), '/', '')]",
        "priority": 1,
        "weight": 1000,
        "enabledState": "Enabled"
      }
    },
    {
      "type": "Microsoft.Cdn/profiles/afdEndpoints/routes",
      "apiVersion": "2023-05-01",
      "name": "[concat(variables('cdnProfileName'), '/', variables('cdnEndpointName'), '/default-route')]",
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles/afdEndpoints', variables('cdnProfileName'), variables('cdnEndpointName'))]",
        "[resourceId('Microsoft.Cdn/profiles/originGroups/origins', variables('cdnProfileName'), 'default-origin-group', variables('clientStorageAccountName'))]"
      ],
      "properties": {
        "customDomains": [],
        "originGroup": { "id": "[resourceId('Microsoft.Cdn/profiles/originGroups', variables('cdnProfileName'), 'default-origin-group')]" },
        "supportedProtocols": ["Http", "Https"],
        "patternsToMatch": ["/*"],
        "forwardingProtocol": "HttpsOnly",
        "linkToDefaultDomain": "Enabled",
        "httpsRedirect": "Enabled",
        "enabledState": "Enabled"
      }
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[variables('managedIdentityName')]",
      "location": "[resourceGroup().location]"
    },
    {
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('clientStorageAccountName'))]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceGroup().id, variables('clientStorageAccountName'), variables('managedIdentityName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('clientStorageAccountName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('storageBlobDataContributorRoleId')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      }
    },
    {
      "scope": "[format('Microsoft.Cdn/profiles/{0}', variables('cdnProfileName'))]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceGroup().id, variables('cdnProfileName'), variables('managedIdentityName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]",
        "[resourceId('Microsoft.Cdn/profiles', variables('cdnProfileName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('cdnProfileContributorRoleId')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      }
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "deployClientApp",
      "location": "[resourceGroup().location]",
      "kind": "AzureCLI",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]": {}
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles/afdEndpoints/routes', variables('cdnProfileName'), variables('cdnEndpointName'), 'default-route')]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('clientStorageAccountName'), '/providers/Microsoft.Authorization/roleAssignments/', guid(resourceGroup().id, variables('clientStorageAccountName'), variables('managedIdentityName')))]",
        "[concat('Microsoft.Cdn/profiles/', variables('cdnProfileName'), '/providers/Microsoft.Authorization/roleAssignments/', guid(resourceGroup().id, variables('cdnProfileName'), variables('managedIdentityName')))]"
      ],
      "properties": {
        "azCliVersion": "2.40.0",
        "retentionInterval": "P1D",
        "cleanupPreference": "OnSuccess",
        "scriptContent": "[concat('sleep 20; az storage blob upload-batch --account-name ', variables('clientStorageAccountName'), ' --auth-mode login -d ''$web'' -s ''./'' --overwrite; az afd endpoint purge -g ', resourceGroup().name, ' --profile-name ', variables('cdnProfileName'), ' --endpoint-name ', variables('cdnEndpointName'), ' --content-paths ''/*''')]",
        "primaryPackageUri": "[if(equals(parameters('releaseVersion'), 'latest'), 'https://github.com/sundeep-dayalan/MONET/releases/latest/download/monet-client.zip', concat('https://github.com/sundeep-dayalan/MONET/releases/download/', parameters('releaseVersion'), '/monet-client.zip'))]"
      }
    }
  ],
  "outputs": {
    "appUrl": {
      "type": "string",
      "value": "[concat('https://', reference(variables('functionAppName')).defaultHostName)]"
    },
    "functionAppName": {
      "type": "string",
      "value": "[variables('functionAppName')]"
    },
    "clientCdnUrl": {
      "type": "string",
      "value": "[concat('https://', reference(resourceId('Microsoft.Cdn/profiles/afdEndpoints', variables('cdnProfileName'), variables('cdnEndpointName'))).hostName)]"
    }
  }
}